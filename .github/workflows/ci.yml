name: CI
on:
  push:
    branches:
      - master
      - develop
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.gitignore'
      - '.vscode/**'
    tags:
      - v*
  pull_request:
    branches:
      - master
      - develop
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.gitignore'
      - '.vscode/**'

env:
  CARGO_TERM_COLOR: always
  PKG_CONFIG_SYSROOT_DIR: /
permissions:
  contents: write
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.event.head_commit.message, 'docs:') }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          lfs: true

      - name: Setup rust cache
        uses: Swatinem/rust-cache@378c8285a4eaf12899d11bea686a763e906956af
        with:
          prefix-key: "${{ runner.os }}-tosho-rust"

      - name: Build
        run: cargo build --verbose --all

      - name: Test
        run: cargo test --verbose --all

  build:
    needs: tests
    strategy:
      matrix:
        os:
          # GNU Linux (x64)
          - [ubuntu-latest, x86_64-unknown-linux-gnu]
          # macOS Intel (x64)
          - [macos-12, x86_64-apple-darwin]
          # macOS Apple Silicon (ARM64)
          - [macos-14, aarch64-apple-darwin]
          # Windows 10 (x64)
          - [windows-latest, x86_64-pc-windows-msvc]
      fail-fast: false
    
    runs-on: ${{ matrix.os[0] }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          lfs: true

      - name: Rust Target
        run: |
          rustup target add ${{ matrix.os[1] }}

      - name: Setup rust cache
        uses: Swatinem/rust-cache@378c8285a4eaf12899d11bea686a763e906956af
        with:
          prefix-key: "${{ runner.os }}-${{ matrix.os[1] }}-tosho-build-rust"

      - name: Prepare build
        run: |
          sed -i'' -e 's/# CI-PROFILE-MARK/[profile.release]\nopt-level = "z"\nlto = true\ncodegen-units = 1\npanic = "abort"\nstrip = "debuginfo"/g' Cargo.toml
        shell: bash

      - name: Build (Nightly)
        if: startsWith(github.ref, 'refs/tags/v') != true
        run: |
          cargo build --release --verbose --all --target ${{ matrix.os[1] }}
        shell: bash

      - name: Permissions (Nightly)
        if: startsWith(github.ref, 'refs/tags/v') != true && matrix.os[0] != 'windows-latest'
        run: |
          chmod +x target/${{ matrix.os[1] }}/release/tosho
        shell: bash

      - name: Upload artifact
        if: startsWith(github.ref, 'refs/tags/v') != true
        uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8
        with:
          name: tosho-${{ matrix.os[1] }}
          path: |
            target/${{ matrix.os[1] }}/release/tosho.exe
            target/${{ matrix.os[1] }}/release/tosho

      - name: Build (Release)
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          cargo build --release --verbose --all --target ${{ matrix.os[1] }}
        shell: bash
        env:
          RELEASE: true

      - name: Prepare release
        if: matrix.os[0] != 'windows-latest' && startsWith(github.ref, 'refs/tags/v')
        shell: bash
        run: |
          cd target/${{ matrix.os[1] }}/release
          chmod +x tosho
          tar -czvf tosho-${{ matrix.os[1] }}.tar.gz tosho
          mv tosho-${{ matrix.os[1] }}.tar.gz ../../..
          cd ../../..

      - name: Prepare release (Win32)
        if: matrix.os[0] == 'windows-latest' && startsWith(github.ref, 'refs/tags/v')
        run: |
          cd target/${{ matrix.os[1] }}/release
          Compress-Archive -Path tosho.exe -DestinationPath tosho-${{ matrix.os[1] }}.zip
          mv tosho-${{ matrix.os[1] }}.zip ../../..
          cd ../../..

      - name: Upload artifact
        uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          name: tosho-packages-${{ matrix.os[1] }}
          path: |
            tosho-${{ matrix.os[1] }}.zip
            tosho-${{ matrix.os[1] }}.tar.gz

  releases:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v') && github.repository_owner == 'noaione'
    permissions:
      contents: write
      discussions: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Download artifacts
        uses: actions/download-artifact@bb3fa7fd35ab8113a980912eb9f59b846d14e3ff
        with:
          path: tosho-packages
          pattern: tosho-packages-*
          merge-multiple: true

      - name: Create changelog
        run: |
          python3 scripts/create_changelog.py
        env:
          VERSION: ${{ github.ref }}

      - name: Release
        uses: softprops/action-gh-release@c9b46fe7aad9f02afd89b12450b780f52dacfb2d
        with:
          files: |
            tosho-packages/*
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          body_path: CHANGELOG-GENERATED.md

      - name: Create discussions
        uses: nvdaes/build-discussion@eb17541dc7e507af05ae77f26983930f7e5fa323
        with:
          title: Release ${{ github.ref_name }}
          body: |
            Release **${{ github.ref_name }}** is now available for **[download](https://github.com/noaione/tosho-mango/releases/tag/${{ github.ref_name }})**.

            Please see the [changelog](https://github.com/noaione/tosho-mango/blob/master/CHANGELOG.md) for more information.

            Report any issues you found in the [issue tracker](https://github.com/noaione/tosho-mango/issues/new/choose)
          category-position: 1  # Announcements

  # Publish to crates.io
  publish:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v') && github.repository_owner == 'noaione'
    steps:
      - name: Checkout repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Prepare publish
        run: |
          python3 scripts/prepare_publish.py

      - name: Publish (Dry run)
        run: |
          cargo publish -p tosho-macros --dry-run
          cargo publish -p tosho-musq --dry-run
          cargo publish -p tosho-kmkc --dry-run
          cargo publish -p tosho-amap --dry-run
          cargo publish -p tosho-sjv --dry-run
        env:
          RELEASE: true
          CARGO_REGISTRY_TOKEN: ${{ secrets.RUST_CARGO_REGISTRY }}

      - name: Publish
        run: |
          cargo publish -p tosho-macros
          cargo publish -p tosho-musq
          cargo publish -p tosho-kmkc
          # Wait 2 minutes to avoid rate limit
          sleep 120
          cargo publish -p tosho-amap
          cargo publish -p tosho-sjv
          # Wait 3 minutes to avoid rate limit
          sleep 180
          cargo publish -p tosho
        env:
          RELEASE: true
          CARGO_REGISTRY_TOKEN: ${{ secrets.RUST_CARGO_REGISTRY }}
